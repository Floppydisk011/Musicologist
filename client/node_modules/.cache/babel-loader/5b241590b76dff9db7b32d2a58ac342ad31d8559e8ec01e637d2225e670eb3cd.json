{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flopp\\\\Desktop\\\\musicologist\\\\client\\\\src\\\\components\\\\myData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\nimport \"./myData.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyData = () => {\n  _s();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await fetch(`/api//getData/${token}`);\n        if (response.status === 500) {\n          throw new Error(\"Fetching data failed\");\n        }\n        const JSONData = await response.json();\n        setUsername(JSONData.username);\n        setPassword(JSONData.password);\n      } catch (error) {\n        console.log(\"Error: \" + error);\n      }\n    }\n    fetchData();\n  }, []);\n  function handleDataForm(event) {\n    event.preventDefault();\n    let userData = {\n      token: localStorage.getItem(\"token\"),\n      username: username,\n      password: password\n    };\n    fetch(\"/api/setData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(data => {\n      if (data) {\n        alert(\"Details successfully upgraded\");\n      } else {\n        alert(\"Attention: something went wrong\");\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dataPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"itemDescription\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"itemDescription\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cancelConfirmdata\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"dataButton\",\n          variant: \"contained\",\n          onClick: () => navigate('/'),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"dataButton\",\n          variant: \"contained\",\n          onClick: handleDataForm,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(MyData, \"lJQk/TQmvKzO38AYYF8jxGjXQpw=\", false, function () {\n  return [useNavigate];\n});\n_c = MyData;\nexport default MyData;\nvar _c;\n$RefreshReg$(_c, \"MyData\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","useNavigate","jsxDEV","_jsxDEV","MyData","_s","username","setUsername","password","setPassword","navigate","fetchData","token","localStorage","getItem","response","fetch","status","Error","JSONData","json","error","console","log","handleDataForm","event","preventDefault","userData","method","headers","body","JSON","stringify","then","data","alert","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","variant","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/flopp/Desktop/musicologist/client/src/components/myData.js"],"sourcesContent":[" \nimport React, { useState, useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\nimport \"./myData.css\";\n\nconst MyData = () => {\n\n    const [username, setUsername] = useState()\n    const [password, setPassword] = useState()\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        async function fetchData() {\n            const token = localStorage.getItem(\"token\")\n            try{\n                const response = await fetch(`/api//getData/${token}`)\n                if (response.status === 500) {\n                    throw new Error(\"Fetching data failed\");\n                }\n                const JSONData = await response.json();\n                setUsername(JSONData.username)\n                setPassword(JSONData.password)\n            }catch(error){\n                console.log(\"Error: \" + error)\n            }\n        }\n\n        fetchData()\n\n    },[])\n\n    function handleDataForm(event){\n        event.preventDefault()\n        let userData = {\n            token: localStorage.getItem(\"token\"),\n            username:username,\n            password: password\n        }\n        fetch(\"/api/setData\", {\n            method: \"POST\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify(userData)\n        }).then(response => response.json()).then(data => {\n            if(data){\n                alert(\"Details successfully upgraded\")\n            }\n            else{\n                alert(\"Attention: something went wrong\")\n            }\n        }).catch(error => {\n            console.log(error)\n        })\n\n    }\n\n    return (\n        <div className='dataPage'>\n            <div className='dataContainer'>\n                <div className='dataItem'>\n                    <p className='itemDescription'>Username: </p><TextField id=\"outlined-basic\" variant=\"outlined\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n                </div>\n                <div className='dataItem'>\n                    <p className='itemDescription'>Password: </p><TextField id=\"outlined-basic\" variant=\"outlined\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n                </div>\n                <div className='cancelConfirmdata'>\n                    <Button className=\"dataButton\" variant=\"contained\" onClick={() => navigate('/')}>Cancel</Button>\n                    <Button className=\"dataButton\" variant=\"contained\" onClick={handleDataForm}>Confirm</Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MyData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}